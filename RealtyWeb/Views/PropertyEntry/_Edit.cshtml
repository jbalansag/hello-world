@model RealtyWeb.Models.PropertyEntry

@{
    ViewBag.Title = "EDIT PROPERTY";
}

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<link href="~/Content/bootstrap-theme.css" rel="stylesheet" />
<link href="~/Content/bootstrap-theme.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />

<script type="text/javascript">
    window.onload = function () {
        document.getElementById('editForm').onsubmit = function () {

            var propertyId = document.getElementById('propertyEntryId').value;
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/PropertyEntry/Delete');

            var formdata = new FormData();
            formdata.append("propertyEntryId", propertyId);
            xhr.send(formdata);

            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    parent.jQuery.fancybox.close();
                }
            }
            return false;
        }
    }
</script>

<div style="font-size: 12px;">
    <div class="col-sm-12" style="height: 50px; border-bottom: 1px solid #e0e0e0; padding: 0px;">
        <h4 class="col-sm-6" style="margin-top: 17px;">EDIT PROPERTY</h4>
        <a class="col-sm-6" style="margin-top: 7px; float: right; padding: 0px;" href="javascript:parent.jQuery.fancybox.close();">
            <img style="float: right; margin-right: 12px;" src="@Url.Action("GetImage", "Image", new { imageName = "~/Content/fullscreenButton.png" })"></a>
    </div>
    <div class="row" style="margin: 0px;">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="row" style="padding: 0px; margin: 0px;">
                <div class="col-sm-6 col-xs-12">

                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true)
                        <div class="form-group">
                            @Html.LabelFor(model => model.PropertyId, "PropertyId", new { @class = "control-label col-sm-2" })
                            <div class="col-sm-10">
                                @Html.DropDownList("PropertyId", null, String.Empty, new { @style = "height: 27px;" })
                                @Html.ValidationMessageFor(model => model.PropertyId)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PropertyTitle, new { @class = "control-label col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.PropertyTitle)
                                @Html.ValidationMessageFor(model => model.PropertyTitle)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PropertyDetails, new { @class = "control-label col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.PropertyDetails)
                                @Html.ValidationMessageFor(model => model.PropertyDetails)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, new { @class = "control-label col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Price)
                                @Html.ValidationMessageFor(model => model.Price)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Bedrooms, new { @class = "control-label col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Bedrooms)
                                @Html.ValidationMessageFor(model => model.Bedrooms)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Baths, new { @class = "control-label col-sm-2" })
                            <div class="col-sm-10">
                                @Html.EditorFor(model => model.Baths)
                                @Html.ValidationMessageFor(model => model.Baths)
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <input type="submit" value="Edit" class="btn btn-default" />
                                <a class="btn btn-default" href="@Url.Action("Index", "PropertyEntry")">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    @*<div class="form-group">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.HasGarden, new { @class = "control-label col-sm-8" })
                        <div class="col-sm-4">
                            @Html.CheckBoxFor(model => model.HasGarden, new { @style = "height: 26px;" })
                            @Html.ValidationMessageFor(model => model.HasGarden)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.AllowPet, new { @class = "control-label col-sm-6" })
                        <div class="col-sm-6">
                            @Html.CheckBoxFor(model => model.AllowPet, new { @style = "height: 24px;" })
                            @Html.ValidationMessageFor(model => model.AllowPet)
                        </div>
                    </div>
                </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.LotArea, new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.LotArea)
                            @Html.ValidationMessageFor(model => model.LotArea)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FloorArea, new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.FloorArea)
                            @Html.ValidationMessageFor(model => model.FloorArea)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address1, new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Address1)
                            @Html.ValidationMessageFor(model => model.Address1)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address2, new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Address2)
                            @Html.ValidationMessageFor(model => model.Address2)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address3, new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Address3)
                            @Html.ValidationMessageFor(model => model.Address3)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address4, new { @class = "control-label col-sm-2" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Address4)
                            @Html.ValidationMessageFor(model => model.Address4)
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6 col-xs-12">
                    <div style="height: 430px;">
                        <div style="width: 100%; height: 30px;">
                            <h4>ADD IMAGES</h4>
                        </div>
                        <div>
                            <input id="fileUpload" name="uploadImages" type="file" multiple style="width: 300px;"><br />
                            <div id="image-holder" style="background-color: #FFF; border: 1px solid #e0e0e0; float: left; overflow: auto; height: 200px; width: 100%; padding: 5px;"></div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#fileUpload").on('change', function () {

            //Get count of selected files
            var countFiles = $(this)[0].files.length;

            var imgPath = $(this)[0].value;
            var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
            var image_holder = $("#image-holder");
            image_holder.empty();

            if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
                if (typeof (FileReader) != "undefined") {

                    //loop for each file selected for uploaded.
                    for (var i = 0; i < countFiles; i++) {

                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $("<img />", {
                                "src": e.target.result,
                                "class": "thumb-image",
                                "style": "height: 75px; width: 100px; position: relative; margin: 10px;"
                            }).appendTo(image_holder);
                        }

                        image_holder.show();
                        reader.readAsDataURL($(this)[0].files[i]);
                    }

                } else {
                    alert("This browser does not support FileReader.");
                }
            } else {
                alert("Pls select only images");
            }
        });
    });
</script>




