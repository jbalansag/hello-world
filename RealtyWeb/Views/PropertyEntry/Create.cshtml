@model RealtyWeb.Models.PropertyEntry

@{
    ViewBag.Title = "Create";

    AjaxOptions options = new AjaxOptions
    {
        HttpMethod = "GET",
        OnSuccess = "UpdateDOM(data)",
        InsertionMode = InsertionMode.Replace,
        LoadingElementId = "divLoading"
    };
}

<div class="row" style="margin:0px; padding:0px;">
    <h4 class="col-md-5" style="margin: 15px 0 0 0;">PROPERTY CREATION</h4>
    @if ((TempData["CreateSuccessful"] as bool?) == false)
    {
        <div class="col-md-7" style="margin: 0; color:red"><h4 style=" margin: 17px 0 0 0;">Error encountered while saving data!</h4></div>
    }
</div>

<hr style="margin-top: 15px; margin-bottom: 15px; border-top: 1px solid rgb(153, 153, 153);" />

<div class="row" style="margin: 0px;">

    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row" style="margin: 0px;">
            <div class="col-md-4">

                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true)

                    <div class="form-group">
                        @Html.LabelFor(model => model.PropertyEntryId, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                             @Html.TextBoxFor(model => model.PropertyEntryId, new { @style = "width: 187px;", @class = "formTextBox", @readonly = "" })
                            @Html.ValidationMessageFor(model => model.PropertyEntryId)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PropIndicatorId, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("PropIndicatorId", null, String.Empty, new { @style = "height: 26px; width: 187px; border-color: rgb(169, 169, 169);" })
                            @Html.ValidationMessageFor(model => model.PropIndicatorId)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PropertyId, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("PropertyId", null, String.Empty, new { @style = "height: 26px; width: 187px; border-color: rgb(169, 169, 169);" })
                            @Html.ValidationMessageFor(model => model.PropertyId)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Price, new { @style = "width: 187px;", @class = "formTextBox"})
                            @Html.ValidationMessageFor(model => model.Price)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PropertyTitle, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.PropertyTitle, new { @style = "width: 510px; max-width: 510px;", @class = "formTextBox" })
                            @Html.ValidationMessageFor(model => model.PropertyTitle)
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-horizontal">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Bedrooms, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Bedrooms, new { @style = "width: 187px;", @class = "formTextBox" })
                            @Html.ValidationMessageFor(model => model.Bedrooms)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Baths, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Baths, new { @style = "width: 187px;", @class = "formTextBox" })
                            @Html.ValidationMessageFor(model => model.Baths)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LotArea, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.LotArea, new { @style = "width: 187px;", @class = "formTextBox" })
                            @Html.ValidationMessageFor(model => model.LotArea)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FloorArea, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.FloorArea, new { @style = "width: 187px;", @class = "formTextBox" })
                            @Html.ValidationMessageFor(model => model.FloorArea)
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-horizontal">

                    <div class="form-group" style=" margin-bottom: 6px;">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.HasGarden, new { @class = "control-label col-md-8" })
                            <div class="col-md-4">
                                @Html.CheckBoxFor(model => model.HasGarden, new { @style = "height: 26px;" })
                                @Html.ValidationMessageFor(model => model.HasGarden)
                            </div>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.AllowPet, new { @class = "control-label col-md-6" })
                            <div class="col-md-6">
                                @Html.CheckBoxFor(model => model.AllowPet, new { @style = "height: 24px;" })
                                @Html.ValidationMessageFor(model => model.AllowPet)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address1, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Address1, new { @style = "width: 187px;", @class = "formTextBox", @placeholder = "(RM./FLR./UNIT NO. & BLDG. NAME) (HOUSE/LOT & BLK. NO.) (STREET NAME) (SUBDIVISION)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '(RM./FLR./UNIT NO. & BLDG. NAME) (HOUSE/LOT & BLK. NO.) (STREET NAME) (SUBDIVISION)'" })
                            @Html.ValidationMessageFor(model => model.Address1)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Address2, new { @style = "width: 187px;", @class = "formTextBox", @placeholder = "(BARANGAY/DISTRICT/LOCALITY)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '(BARANGAY/DISTRICT/LOCALITY)'" })
                            @Html.ValidationMessageFor(model => model.Address2)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address3, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Address3, new { @style = "width: 187px;", @class = "formTextBox", @placeholder = "(CITY/MUNICIPALITY)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '(CITY/MUNICIPALITY)'" })
                            @Html.ValidationMessageFor(model => model.Address3)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address4, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Address4, new { @style = "width: 187px;", @class = "formTextBox", @placeholder = "(PROVINCE)", @onfocus = "this.placeholder = ''", @onblur = "this.placeholder = '(PROVINCE)'" })
                            @Html.ValidationMessageFor(model => model.Address4)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <hr style="margin-top: 0px; margin-bottom: 15px; border-top: 1px solid rgb(153, 153, 153);" />
        
        <div class="row" style="margin-right: 0px;">
            <div class="col-md-8">
                <div class="form-group">
                    @Html.LabelFor(model => model.PropertyDetails, new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.PropertyDetails, new { @style = "width: 100%; height: 198px; max-width: 590px; resize: none" })
                        @Html.ValidationMessageFor(model => model.PropertyDetails)
                    </div>
                </div>
            </div>
            <div class="col-md-4" style="margin-top: -8px; padding:0px;">
                <div class="col-md-5" style="height: 30px; padding: 0px;">
                    <h4>ADD IMAGES</h4>
                </div>
                <div class="col-md-7" style="padding: 0px; padding-top: 7px; height: 30px;">
                    <input id="fileUpload" name="uploadImages" type="file" multiple style="width: 100%;"><br />
                </div>
                <div style="height: 270px; border: 0px solid rgb(153, 153, 153);">
                    <div id="image-holder" style="background-color: #FFF; border: 1px solid rgb(169, 169, 169); float: left; overflow: auto; height: 200px; width: 100%; padding: 5px;"></div>
                </div>
            </div>
        </div>
        
        <hr style="margin-top: 0px; margin-bottom: 0px; border-top: 1px solid rgb(153, 153, 153);" />
        
        <div class="row" style="margin: 0px;">
            <div class="col-md-8">
                <div class="row" style="margin: 0px;">
                    <div class="col-md-4" style="padding: 0px;">
                        <h4>POINT OF INTEREST</h4>
                    </div>
                    <div class="col-md-1" style="margin-top: 9px; margin-left: 0px; padding: 0px;">
                        <a id="addPoiRow" class="addPoiRow btn btn-success btn-xs"><strong>+</strong> ADD</a>
                    </div>
                </div>

                <div class="row" style="height: 177px; border: 1px solid rgb(153, 153, 153); overflow-y: scroll; background-color: #fff; margin: 0 25px 0 0;">
                    <table id="poiList" class="poiList" style="width: 100%">
                        <tbody>
                            @foreach (var item in Model.PointOfInterests)
                            {
                                @Html.Partial("_PointOfIntestList", item, ViewData)
                            }
                        </tbody>
                    </table>
                </div>
                @*@using (Ajax.BeginForm("AddPointOfInterest", options))
                {
                    <div id="divLoading" style="color: red; width: 200px; background-color: yellow; font-size: larger; display: none; position: absolute;">Loading ....</div>
                    <div class="form-group">
                        <div class="col-md-4" style="padding: 0px; padding-right: 5px;">
                            @Html.DropDownList("poiTypeId", ViewData["PoiTypes"] as IEnumerable<SelectListItem>, String.Empty, new { @style = "height: 23px; width: 100%;" })
                        </div>
                        <div class="col-md-3" style="padding: 0px;">
                            @Html.TextBox("Name")
                        </div>
                        <div class="col-md-3" style="padding: 0px; padding-left: 24px;">
                            @Html.TextBox("distance")
                        </div>
                        <div class="col-md-2" style="padding: 0px;">
                            <input type="submit" class="btn btn-default btn-xs" value="AddPointOfInterest" style="float: right;" />
                        </div>
                    </div>
                }*@
            </div>

            <div class="col-md-4" style="margin-top: 37px;">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-9">
                        <input type="submit" value="Submit" class="btn btn-default" />
                        <a class="btn btn-default" href="@Url.Action("Index", "PropertyEntry")">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#fileUpload").on('change', function () {

            //Get count of selected files
            var countFiles = $(this)[0].files.length;

            var imgPath = $(this)[0].value;
            var extn = imgPath.substring(imgPath.lastIndexOf('.') + 1).toLowerCase();
            var image_holder = $("#image-holder");
            image_holder.empty();

            if (extn == "gif" || extn == "png" || extn == "jpg" || extn == "jpeg") {
                if (typeof (FileReader) != "undefined") {

                    //loop for each file selected for uploaded.
                    for (var i = 0; i < countFiles; i++) {

                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $("<img />", {
                                "src": e.target.result,
                                "class": "thumb-image",
                                "style": "height: 75px; width: 100px; position: relative; margin: 10px;"
                            }).appendTo(image_holder);
                        }

                        image_holder.show();
                        reader.readAsDataURL($(this)[0].files[i]);
                    }

                } else {
                    alert("This browser does not support FileReader.");
                }
            } else {
                alert("Pls select only images");
            }
        });
    });

    $('#addPoiRow').click(function () {
        $.get('@Url.Action("AddNewPOI", "PropertyEntry")', function (response) {
            $('#poiList tbody').append(response);
        });
    });

    function UpdateDOM(response) {
        $('#poiList tbody').append(response);
    }

    $("#poiList").on('click', '.btnDelete', function () {
        $(this).closest('div').remove();
    });
</script>



